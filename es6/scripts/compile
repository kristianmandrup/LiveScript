#!/usr/bin/env node

// Generated by LiveScript 1.2.0
(function(){
  var LiveScript, slurp, spit, tweak, compileEs6;
  LiveScript = require('../lib');
  slurp = require('./base').slurp;
  spit = require('./base').spit;
  tweak = require('./base').tweak;
  compileEs6 = function(){
    var files;
    files = dir('es6/test');
    if (!(in$('--harmony', process.execArgv) || in$('--harmony-generators', process.execArgv))) {
      say("Missing --harmony node option");
      return;
    }
    files = ['block_scoping.ls'];
    return files.forEach(function(file){
      var filename, code;
      if (!/\.ls$/i.test(file)) {
        return;
      }
      filename = path.join('es6/test', file);
      code = slurp(filename);
      return LiveScript.run(code, {
        filename: filename
      }, function(){
        var jsFile;
        jsFile = tweak(file, '.js');
        return spit(jsFile(code));
      });
    });
  };
  module.exports = compileEs6;
  function in$(x, xs){
    var i = -1, l = xs.length >>> 0;
    while (++i < l) if (x === xs[i]) return true;
    return false;
  }
}).call(this);
